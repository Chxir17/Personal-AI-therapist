package com.aitherapist.aitherapist.telegrambot.utils.createButtons;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public class InlineKeyboardFactory {

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ Map: –∫–ª—é—á ‚Äî —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî callbackData
     *
     * @param buttonMap –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫ –Ω–∞ callback data
     * @param buttonsPerRow —Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1, –µ—Å–ª–∏ < 1)
     * @return InlineKeyboardMarkup
     */
    public static InlineKeyboardMarkup createInlineKeyboard(Map<String, String> buttonMap, int buttonsPerRow) {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        if (buttonsPerRow < 1) buttonsPerRow = 1;

        List<InlineKeyboardButton> currentRow = new ArrayList<>();
        for (Map.Entry<String, String> entry : buttonMap.entrySet()) {
            InlineKeyboardButton button = new InlineKeyboardButton();
            button.setText(entry.getKey());
            button.setCallbackData(entry.getValue());

            currentRow.add(button);
            if (currentRow.size() == buttonsPerRow) {
                keyboard.add(currentRow);
                currentRow = new ArrayList<>();
            }
        }

        if (!currentRow.isEmpty()) {
            keyboard.add(currentRow);
        }

        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(keyboard);
        return markup;
    }

    public static InlineKeyboardMarkup createDoctorDefaultKeyboard() {
        Map<String, String> buttonMap = new LinkedHashMap<>(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Ä—è–¥–æ–∫
        buttonMap.put("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ", "/getLastRecords");
        buttonMap.put("üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç—É", "/sendMessageToPatient");
        buttonMap.put("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "/settingsDoctor");

        // ‚ûï –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏:
        buttonMap.put("üìÖ –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏—ë–º", "/scheduleAppointment");
        buttonMap.put("üìÅ –ò—Å—Ç–æ—Ä–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤", "/patientHistory");

        return createInlineKeyboard(buttonMap, 2);
    }
}
