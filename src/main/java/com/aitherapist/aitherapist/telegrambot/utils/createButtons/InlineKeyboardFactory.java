package com.aitherapist.aitherapist.telegrambot.utils.createButtons;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public class InlineKeyboardFactory {

    public static InlineKeyboardMarkup createInlineKeyboard(Map<String, String> buttonMap, int buttonsPerRow) {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        if (buttonsPerRow < 1) buttonsPerRow = 1;

        List<InlineKeyboardButton> currentRow = new ArrayList<>();
        for (Map.Entry<String, String> entry : buttonMap.entrySet()) {
            InlineKeyboardButton button = new InlineKeyboardButton();
            button.setText(entry.getKey());
            button.setCallbackData(entry.getValue());

            currentRow.add(button);
            if (currentRow.size() == buttonsPerRow) {
                keyboard.add(currentRow);
                currentRow = new ArrayList<>();
            }
        }

        if (!currentRow.isEmpty()) {
            keyboard.add(currentRow);
        }

        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        markup.setKeyboard(keyboard);
        return markup;
    }

    public static InlineKeyboardMarkup createDoctorDefaultKeyboard() {
        Map<String, String> buttonMap = new LinkedHashMap<>();
        buttonMap.put("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ", "/getLastRecords");
        buttonMap.put("üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç—É", "/sendMessageToPatient");
        buttonMap.put("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "/settingsDoctor");
        buttonMap.put("üìÖ –ü–∞—Ü–∏–Ω—Ç—ã ", "/doctorPatientsMenu");
        buttonMap.put("üìÅ –ò—Å—Ç–æ—Ä–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤", "/patientHistory");
        return createInlineKeyboard(buttonMap, 2);
    }

    public static InlineKeyboardMarkup createDoctorSettingsKeyboard() {
        Map<String, String> buttonMap = new LinkedHashMap<>();
        buttonMap.put("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", "/changeDoctorAccountData");
        buttonMap.put("üîÑ –°–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "/changeRole");
        buttonMap.put("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "/doctorMenu");
        return createInlineKeyboard(buttonMap, 2);
    }

    public static InlineKeyboardMarkup createEditClinicPatientData(){
        Map<String, String> buttons = new LinkedHashMap<>();
        buttons.put("–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "/editName");
        buttons.put("–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è", "/editBirthDate");
        buttons.put("–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª", "/editGender");
        buttons.put("–ê—Ä–∏—Ç–º–∏—è", "/editArrhythmia");
        buttons.put("–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è", "/editChronicDiseases");
        buttons.put("–†–æ—Å—Ç", "/editHeight");
        buttons.put("–í–µ—Å", "/editWeight");
        buttons.put("–í—Ä–µ–¥–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏", "/editBadHabits");


        return  InlineKeyboardFactory.createInlineKeyboard(buttons, 2);
    }

    public static InlineKeyboardMarkup createEditDoctorData(){
        Map<String, String> buttons = new LinkedHashMap<>();
        buttons.put("–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "/editName");
        buttons.put("–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è", "/editBirthDate");
        buttons.put("–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª", "/editGender");
        return  InlineKeyboardFactory.createInlineKeyboard(buttons, 2);
    }

    public static InlineKeyboardMarkup createPatientManagementKeyboard() {
        Map<String, String> buttonMap = new LinkedHashMap<>();
        buttonMap.put("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", "/addPatient");
        buttonMap.put("üë• –°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤", "/patientList");
        buttonMap.put("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ", "/patientInfo");
        return createInlineKeyboard(buttonMap, 2);
    }

    public static InlineKeyboardMarkup createPatientDefaultKeyboard() {
        Map<String, String> buttonMap = new LinkedHashMap<>();
        buttonMap.put("üìä –í–≤–µ—Å—Ç–∏ daily –¥–∞–Ω–Ω—ã–µ", "/inputDailyData");
        buttonMap.put("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –¥–æ–∫—Ç–æ—Ä—É", "/writeToDoctor");
        buttonMap.put("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", "/myProfile");
        buttonMap.put("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "/patientSettings");
        buttonMap.put("üìà –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π", "/myHealthHistory");
        return createInlineKeyboard(buttonMap, 2);
    }


}